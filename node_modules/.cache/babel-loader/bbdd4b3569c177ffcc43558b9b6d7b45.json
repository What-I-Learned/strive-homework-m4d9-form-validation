{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\justb\\\\Documents\\\\full_stack_developement\\\\Strive\\\\Homework\\\\strive-homework-m4d2-bookstore\\\\src\\\\components\\\\BookComments.jsx\";\nimport { Component } from \"react\";\nimport { Form, ListGroup, Spinner, Button } from \"react-bootstrap\";\nimport SingleComment from \"./SingleComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BookComments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      comments: [],\n      isLoading: true\n    };\n\n    this.componentDidMount = async () => {\n      try {\n        let response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${this.props.book.asin}`, {\n          headers: {\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFjZjk1ZTJkNTI2MjAwMTViNmRjOWQiLCJpYXQiOjE2Mjk5ODUyMzksImV4cCI6MTYzMTE5NDgzOX0.mS3Qwvrlsn7oJIK8hVVuKRbXkVR6kVchtAJ7C4UySkI\"\n          }\n        });\n\n        if (response.ok) {\n          let commentsData = await response.json();\n          this.setState({\n            comments: commentsData,\n            isLoading: false\n          });\n          console.log(this.state.commentsData);\n        }\n      } catch (err) {\n        console.log(err);\n      }\n    };\n\n    this.handleSubmit = async e => {\n      // with async/await\n      e.preventDefault();\n      console.log(this.state.reservation);\n\n      try {\n        // the place for every operation that might fail outside of your control\n        let response = await fetch(`https://striveschool-api.herokuapp.com/api/comments/${this.props.book.asin}`, {\n          method: \"POST\",\n          body: JSON.stringify(this.state.reservation),\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFjZjk1ZTJkNTI2MjAwMTViNmRjOWQiLCJpYXQiOjE2Mjk5ODUyMzksImV4cCI6MTYzMTE5NDgzOX0.mS3Qwvrlsn7oJIK8hVVuKRbXkVR6kVchtAJ7C4UySkI\"\n          }\n        });\n\n        if (response.ok) {\n          this.setState({\n            comments: []\n          });\n        } else {\n          alert(\"your reservation was NOT saved correctly!\");\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    this.handleInput = (e, propertyName) => {\n      this.setState({ ...this.state,\n        // copying over name, phone, numberOfPeople, smoking etc.\n        [propertyName]: propertyName.push(e.target.value)\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), this.state.isLoading && /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"success\",\n        className: \"mx-auto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), this.state.comments.length == 0 && !this.state.isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n        children: this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(SingleComment, {\n          singleComment: comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"mt-5\",\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: this.state.comments[comments.length - 1],\n          onChange: e => this.handleInput(e, \"comments\"),\n          placeholder: \"Leave a comments about the book\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default BookComments;","map":{"version":3,"sources":["C:/Users/justb/Documents/full_stack_developement/Strive/Homework/strive-homework-m4d2-bookstore/src/components/BookComments.jsx"],"names":["Component","Form","ListGroup","Spinner","Button","SingleComment","BookComments","state","comments","isLoading","componentDidMount","response","fetch","props","book","asin","headers","Authorization","ok","commentsData","json","setState","console","log","err","handleSubmit","e","preventDefault","reservation","method","body","JSON","stringify","alert","error","handleInput","propertyName","push","target","value","render","length","map","comment"],"mappings":"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","sourcesContent":["import { Component } from \"react\";\r\nimport { Form, ListGroup, Spinner, Button } from \"react-bootstrap\";\r\nimport SingleComment from \"./SingleComment\";\r\n\r\nclass BookComments extends Component {\r\n  state = {\r\n    comments: [],\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount = async () => {\r\n    try {\r\n      let response = await fetch(\r\n        `https://striveschool-api.herokuapp.com/api/comments/${this.props.book.asin}`,\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFjZjk1ZTJkNTI2MjAwMTViNmRjOWQiLCJpYXQiOjE2Mjk5ODUyMzksImV4cCI6MTYzMTE5NDgzOX0.mS3Qwvrlsn7oJIK8hVVuKRbXkVR6kVchtAJ7C4UySkI\",\r\n          },\r\n        }\r\n      );\r\n      if (response.ok) {\r\n        let commentsData = await response.json();\r\n        this.setState({\r\n          comments: commentsData,\r\n          isLoading: false,\r\n        });\r\n        console.log(this.state.commentsData);\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    // with async/await\r\n    e.preventDefault();\r\n    console.log(this.state.reservation);\r\n\r\n    try {\r\n      // the place for every operation that might fail outside of your control\r\n\r\n      let response = await fetch(\r\n        `https://striveschool-api.herokuapp.com/api/comments/${this.props.book.asin}`,\r\n        {\r\n          method: \"POST\",\r\n          body: JSON.stringify(this.state.reservation),\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization:\r\n              \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2MTFjZjk1ZTJkNTI2MjAwMTViNmRjOWQiLCJpYXQiOjE2Mjk5ODUyMzksImV4cCI6MTYzMTE5NDgzOX0.mS3Qwvrlsn7oJIK8hVVuKRbXkVR6kVchtAJ7C4UySkI\",\r\n          },\r\n        }\r\n      );\r\n\r\n      if (response.ok) {\r\n        this.setState({\r\n          comments: [],\r\n        });\r\n      } else {\r\n        alert(\"your reservation was NOT saved correctly!\");\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  handleInput = (e, propertyName) => {\r\n    this.setState({\r\n      ...this.state,\r\n      // copying over name, phone, numberOfPeople, smoking etc.\r\n      [propertyName]: propertyName.push(e.target.value),\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center\">\r\n        <h2>Comments</h2>\r\n        {this.state.isLoading && (\r\n          <Spinner animation=\"border\" variant=\"success\" className=\"mx-auto\" />\r\n        )}\r\n        {this.state.comments.length == 0 && !this.state.isLoading ? (\r\n          <div>No comments</div>\r\n        ) : (\r\n          <ListGroup>\r\n            {this.state.comments.map((comment) => (\r\n              <SingleComment singleComment={comment} />\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n        <Form className=\"mt-5\" onSubmit={this.handleSubmit}>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={this.state.comments[comments.length - 1]}\r\n            onChange={(e) => this.handleInput(e, \"comments\")}\r\n            placeholder=\"Leave a comments about the book\"\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Submit Comment\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookComments;\r\n"]},"metadata":{},"sourceType":"module"}